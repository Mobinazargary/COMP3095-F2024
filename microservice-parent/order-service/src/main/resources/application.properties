spring.application.name=order-service
order-service.version=v1.0

server.port=8087
spring.datasource.url=jdbc:postgresql://localhost:5433/order-service
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgresSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none

inventory.service.url=http://localhost:8088
# Web based documentation - http://localhost:8087/swagger-ui
springdoc.swagger-ui.path=/swagger-ui

# JSON based documentation - http://localhost:8087/api-docs
springdoc.api-docs.path=/v3/api-docs

#Resilience4j
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size
resilience4j.circuitbreaker.instances.inventory.slidingWindowType
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
# Requires at least 5 calls to calculate failure rate and decide to transition to OPEN state
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5


# Sets the maximum number of times a failed call will be retried
resilience4j.retry.instances.inventory.max-attempts=3
# Defines how long to wait before re-trying a failed call
resilience4j.retry.instances.inventory.wait-duration=2s

# Kafka Properties
# the address of the kafka broker
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=broker:29092
# the default topic where message will be sent if not explicitly specified
spring.kafka.template.default-topic=order-placed
# the serializer class used for serializing the key for the kafka messages
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# the serializer class used for serializing the json values of the messages
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#
spring.kafka.producer.properties.spring.json.type.mapping=event:ca.gbc.orderservice.event.OrderPlacedEvent