spring.application.name=order-service

server.port=8087

spring.datasource.url=jdbc:postgresql://postgres-order:5432/order-service
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none

inventory.service.url=http://inventory-service:8088

#Resilience4j
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.configs.default.registerHealthIndicator
resilience4j.circuitbreaker.configs.default.event-consumer-buffer-size
resilience4j.circuitbreaker.configs.default.slidingWindowType
resilience4j.circuitbreaker.configs.default.slidingWindowSize
resilience4j.circuitbreaker.configs.default.failureRateThreshold
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled
resilience4j.timelimiter.configs.default.timeout-duration=3s
# Requires at least 5 calls to calculate failure rate and decide to transition to OPEN state
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5


# Sets the maximum number of times a failed call will be retried
resilience4j.retry.configs.default.max-attempts=3
# Defines how long to wait before re-trying a failed call
resilience4j.retry.configs.default.wait-duration=2s

spring.kafka.bootstrap-servers=broker:9092
#the default of topic where message will be sent if not explicitly specifies
spring.kafka.template.default-topic=order-placed
#The serializer class used for serializing the key for kafka message
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#The serializer class used for serializing the JSON value of the message
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:ca.gbc.orderservice.event.OrderPlacedEvent;